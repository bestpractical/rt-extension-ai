NAME
    RT-Extension-AI - AI Features for Request Tracker extension

DESCRIPTION
    This RT extension introduces AI-powered features to enhance ticket
    handling efficiency and improve the user experience in Request Tracker
    (RT).

FEATURES
    *   Autocomplete

            Suggests the next three words while typing in ticket comments or replies.

    *   AI CKEditor Actions

            - Adjust Tone - rephrase content for professionalism and clarity.
            - AI Suggestion - generate responses based on user input.
            - Translate - translate ticket text between languages.

    *   Ticket Sentiment

            Automatically analyzes user replies and categorizes sentiment (Satisfied, Dissatisfied, Neutral).

    *   Ticket Summarization

            Generates a concise summary based on ticket conversation history.

RT VERSION
    Works with RT 6.

INSTALLATION
    perl Makefile.PL
    make
    make install
        May need root permissions

    make initdb
        Only run this the first time you install this module.

        If you run this twice, you may end up with duplicate data in your
        database.

        If you are upgrading this module, check for upgrading instructions
        in case changes need to be made to your database.

    Edit your /opt/rt5/etc/RT_SiteConfig.pm
        Add this line:

            Plugin('RT::Extension::AI');

        See below for additional configuration details.

    Clear your mason cache
            rm -rf /opt/rt6/var/mason_data/obj

    Restart your webserver

CONFIGURATION
    This section outlines the configuration steps to enable the AI
    functionalities in RT.

  AI Provider Setup
    Set the default provider and its config:

        Set($DefaultProvider, 'OpenAI');

        Set(%AIProviders,
            'OpenAI' => {
                api_key => 'YOUR_API_KEY',
                timeout => 15,
                url     => 'https://api.openai.com/v1/chat/completions',
            }
        );

  Model Configuration
        Set($GeneralAIModel, {
            modelDetails => {
                modelName   => 'gpt-4',
                maxToken    => 300,
                temperature => 0.5,
                stream      => \0,
            }
        });

        Set($AutoCompleteModel, {
            modelDetails => {
                modelName   => 'gpt-3.5-turbo',
                maxToken    => 10,
                temperature => 0.7,
                stream      => \1,
            }
        });

  Prompts
    Define system-level instructions for each AI task:

        Set($TicketSummary, "You are a helpdesk assistant. Summarize the conversation...");
        Set($TicketSentiment, "Classify the overall sentiment...");
        Set($AdjustTone,      "Paraphrase the text...");
        Set($AiSuggestion,    "Provide practical advice...");
        Set($Translate,       "Translate the text from...");
        Set($Autocomplete,    "Predict the next three words...");

  CKEditor Integration
    To activate the AI button in rich text editors:

        my $messageBoxRichTextInitArguments = RT->Config->Get('MessageBoxRichTextInitArguments');
        $messageBoxRichTextInitArguments->{extraPlugins} //= [];
        push @{$messageBoxRichTextInitArguments->{extraPlugins}}, 'RtExtensionAi';

        $messageBoxRichTextInitArguments->{toolbar}{items} //= [];
        push @{$messageBoxRichTextInitArguments->{toolbar}{items}}, 'aiSuggestion';

SCRIPS AND CUSTOM FIELDS
  Installed Custom Fields
    - Ticket Summary - Ticket Sentiment (Dropdown: Satisfied, Dissatisfied,
    Neutral)

  Installed Custom Fields
    *   Ticket Summary

    *   Ticket Sentiment (Dropdown: Satisfied, Dissatisfied, Neutral)

  Installed Scrips
    *   On Comment or Correspond - Adds a generated summary.

    *   On Correspond - Classifies sentiment and updates the custom field.

  RtExtensionAi
    A new custom plugin RtExtensionAi was created to handle the AI
    suggestions and other AI-related features. This plugin is integrated
    with CKEditor to provide a seamless user experience.

    To enable the plugin, add the following line to your RT_SiteConfig.pm
    file:

        Set($MessageBoxRichTextInitArguments, {
            extraPlugins => ['RtExtensionAi'],
            toolbar => {
                items => [ ... 'aiSuggestion' ]
            }
        });

  Updating the plugin
    The plugin uses Vite to build the assets. Information on working with
    CKEditor plugins can be found on their website, a good place to start is
    here:

    <https://ckeditor.com/docs/ckeditor5/latest/framework/tutorials/creating
    -simple-plugin-timestamp.html>

    BUILDING THE JS PLUGIN
        We use Vite to build the CKEditor plugin.

            npm install
            npm run build

        For more details:
        https://ckeditor.com/docs/ckeditor5/latest/framework/tutorials/creat
        ing-simple-plugin-timestamp.html

AUTHOR
    Parag Shah <paragsha@buffalo.edu>

    Neel Patel <neelvish@buffalo.edu>

    Abhinandan Vijan <abhinandanvijan98@gmail.com>

    Ayush Goel <ayushgoe@buffalo.edu>

    Shivan Mathur <shivanmthr18@gmail.com>

    Best Practical Solutions, LLC <modules@bestpractical.com>

    All bugs should be reported via email to
        bug-RT-Extension-PagerDuty@rt.cpan.org
    or via the web at
        E<lt>Page linkE<gt>
LICENSE AND COPYRIGHT
    This software is Copyright (c) 2025 by BPS

    This is free software, licensed under:

      The GNU General Public License, Version 2, June 1991

POD ERRORS
    Hey! The above document had some coding errors, which are explained
    below:

    Around line 195:
        '=item' outside of any '=over'

    Around line 205:
        You forgot a '=back' before '=head1'

