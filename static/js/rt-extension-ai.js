(function(d,u){typeof exports=="object"&&typeof module<"u"?u(exports):typeof define=="function"&&define.amd?define(["exports"],u):(d=typeof globalThis<"u"?globalThis:d||self,u(d.RtExtensionAi={}))})(this,function(d){"use strict";async function u(o,e){try{const n=await fetch("/Helpers/AISuggestion/process",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({rawText:o,callType:e}).toString()});if(!n.ok)return console.error("Error in fetchAiResults:",n.status,n.statusText),"No suggestion available.";const t=await n.text();return t||(console.warn("No suggestion found in response:",t),"No suggestion available.")}catch(n){return console.error("Error fetching AI results:",n),"No suggestion available."}}function y(o){let e="",n=!1;const t=o.model.document.selection;if(!t.isCollapsed){const r=t.getFirstRange();if(r){for(const s of r.getItems())s.is("$textProxy")&&(e+=s.data);n=!0}}return{content:n?e:o.data.get(),isSelected:n}}function v(o){return new DOMParser().parseFromString(o,"text/html").body.textContent||""}function E(o){if(!/<\/?[a-z][\s\S]*>/i.test(o))return o.trim();const t=new DOMParser().parseFromString(o,"text/html");return Array.from(t.querySelectorAll("p")).map(s=>{var l;return((l=s.textContent)==null?void 0:l.trim())||""}).filter(Boolean).join(`
`)}function w(o,e){if(!e||!o){console.error("Invalid suggestion or editor instance.");return}o.model.change(n=>{const t=o.model.document.getRoot();o.model.markers.has("autocompleteSuggestion")&&n.removeMarker("autocompleteSuggestion");const r=o.model.document.selection.getFirstPosition()||n.createPositionAt(t,"end"),s=n.createRange(r,r);n.addMarker("autocompleteSuggestion",{range:s,usingOperation:!1,affectsData:!1}),b(o,e)})}function b(o,e){if(!e||!o){console.error("Invalid suggestion or editor instance.");return}const n="placeholder-autocomplete-style";if(!document.getElementById(n)){const r=document.createElement("style");r.id=n,r.innerHTML=`
            .placeholder-autocomplete-text {
                color: gray;
                opacity: 0.5;
            }
        `,document.head.appendChild(r)}let t=null;o.editing.view.change(r=>{const s=o.model.document.selection,l=r.createText(e);t=r.createContainerElement("span",{class:"placeholder-autocomplete-text"});const i=o.editing.mapper.toViewPosition(s.getFirstPosition());i&&(r.insert(i,t),r.insert(r.createPositionAt(t,0),l))}),o.keystrokes.set("Tab",(r,s)=>{t&&(o.model.change(l=>{const i=o.model.document.selection.getFirstPosition();if(i){l.insertText(e,i);const a=l.createPositionAt(i.parent,i.offset+e.length);l.setSelection(a),o.editing.view.change(m=>{m.remove(t)}),t=null}}),s())}),o.ui.view.editable.element.addEventListener("click",()=>{t&&(o.editing.view.change(r=>{r.remove(t)}),t=null)}),document.addEventListener("click",r=>{!o.ui.view.editable.element.contains(r.target)&&t&&(o.editing.view.change(l=>{l.remove(t)}),t=null)}),o.model.document.on("change:data",()=>{t&&(o.editing.view.change(r=>{r.remove(t)}),t=null)})}class x{constructor(){this.overlay=null,this.modalInstance=null,this.modalElement=null,this.close=this.close.bind(this)}checkBootstrapAvailability(){return typeof bootstrap>"u"?(console.error("Bootstrap is not available. Make sure it is properly loaded."),!1):!0}open(e){if(!this.checkBootstrapAvailability())return!1;try{this.overlay||(this.overlay=this.createOverlay(),document.body.appendChild(this.overlay)),this.closeExistingModal();const n=document.createElement("div");n.innerHTML=e.trim();const t=n.querySelector("#aiModal");return t?(n.removeChild(t),document.body.appendChild(t),this.modalElement=t,this.modalInstance=new bootstrap.Modal(t,{backdrop:!0,keyboard:!0}),this.modalInstance.show(),this.setupCloseHandlers(t),!0):(console.error("Modal element #aiModal not found in the provided content"),!1)}catch(n){return console.error("Error opening modal:",n),!1}}setupCloseHandlers(e){e.querySelectorAll('.close, .btn-close, [data-bs-dismiss="modal"]').forEach(t=>{t.removeEventListener("click",this.close.bind(this)),t.addEventListener("click",this.close.bind(this))})}closeExistingModal(){try{this.modalInstance&&(this.modalInstance.hide(),this.modalInstance.dispose(),this.modalInstance=null),this.modalElement&&this.modalElement.parentNode&&this.modalElement.parentNode.removeChild(this.modalElement),document.querySelectorAll(".modal-backdrop").forEach(n=>{n&&n.parentNode&&n.parentNode.removeChild(n)}),document.body.classList.remove("modal-open"),document.body.style.removeProperty("padding-right"),document.body.style.removeProperty("overflow"),this.modalElement=null}catch(e){console.warn("Error disposing existing modal:",e)}}close(){try{this.modalInstance&&(this.modalInstance.hide(),this.modalInstance.dispose(),this.modalInstance=null),this.modalElement&&this.modalElement.parentNode&&this.modalElement.parentNode.removeChild(this.modalElement),this.modalElement=null}catch(e){console.warn("Error closing modal:",e),this.modalElement&&this.modalElement.parentNode&&this.modalElement.parentNode.removeChild(this.modalElement),document.querySelectorAll(".modal-backdrop").forEach(t=>{t.parentNode.removeChild(t)}),document.body.classList.remove("modal-open"),document.body.style.removeProperty("padding-right"),document.body.style.removeProperty("overflow")}}createOverlay(){const e=document.createElement("div");return e.classList.add("modal-overlay"),e.style.display="none",e}}async function T(o,e={}){const n=new URLSearchParams(e).toString(),t=`${o}?${n}`;try{const r=await fetch(t,{method:"GET",headers:{"X-Requested-With":"XMLHttpRequest"}});if(!r.ok)throw new Error(`Failed to fetch modal content: ${r.status} ${r.statusText}`);return await r.text()}catch(r){throw console.error("Error loading modal content:",r),r}}function S(o){if(!o||!o.model||!o.model.document)return console.warn("Editor not properly initialized when trying to save selection"),{ranges:[],attributes:[]};const e=o.model.document.selection,n=Array.from(e.getRanges()).map(r=>r.clone()),t=Array.from(e.getAttributes());return{ranges:n,attributes:t}}function I(o,e){if(!o||!o.model){console.warn("Editor not properly initialized when trying to restore selection");return}if(!e||!e.ranges){console.warn("Invalid saved selection when trying to restore");return}o.model.change(n=>{try{n.setSelection(e.ranges);for(const[t,r]of e.attributes)n.setSelectionAttribute(t,r)}catch(t){console.error("Error restoring editor selection:",t)}})}async function A(o,e,n="suggest_response",t=!1){if(!e||!e.model){console.error("Editor not properly initialized");return}try{if(typeof bootstrap>"u"){console.error("Bootstrap is required but not available");return}o=E(o);const r=S(e);let s;try{s=await T("/Helpers/AISuggestion/modal",{rawText:o,callType:n})}catch(a){console.error("Failed to load modal content:",a),alert("Failed to load AI suggestion modal. Please try again later.");return}const l=new x;if(!l.open(s)){console.error("Failed to open modal");return}setTimeout(()=>{try{const a=l.modalElement.querySelector('[name="done-button"]'),m=l.modalElement.querySelector('[name="ai-result"]');if(!m){console.error("suggestionText element not found in modal content");return}typeof htmx<"u"&&htmx.process(l.modalElement),a?(a.replaceWith(a.cloneNode(!0)),l.modalElement.querySelector('[name="done-button"]').addEventListener("click",()=>{var g;const p=(g=m==null?void 0:m.innerText)==null?void 0:g.replace(/^\s*|\s*$/g,"").trim();if(!p){console.warn("No AI response to insert"),l.close();return}try{e.model.change(c=>{try{const h=e.data.toModel(e.data.processor.toView(p));if(!r.ranges.length||!t){const f=e.model.document.getRoot();c.setSelection(null),c.remove(c.createRangeIn(f)),c.insert(h,c.createPositionAt(f,0))}else I(e,r),e.model.insertContent(h,e.model.document.selection);const P=e.model.document.getRoot(),F=c.createPositionAt(P,"end");c.setSelection(F),setTimeout(()=>{e.editing.view.focus()},100)}catch(h){console.error("Error inserting content into editor:",h),alert("Failed to insert AI suggestion into the editor.")}})}catch(c){console.error("Error applying editor changes:",c)}l.close()})):console.warn("Done button not found in modal content")}catch(a){console.error("Error setting up modal interaction:",a)}},100)}catch(r){console.error("Error creating suggestion modal:",r),alert("An error occurred while creating the AI suggestion modal.")}}const M=`
<svg width="68" height="64" viewBox="0 0 68 64" xmlns="http://www.w3.org/2000/svg">
  <g fill="none" fill-rule="evenodd">
    <path d="M34 2C17.432 2 4 15.432 4 32s13.432 30 30 30 30-13.432 30-30S50.568 2 34 2zm0 56C19.561 58 8 46.439 8 32S19.561 6 34 6s26 11.561 26 26-11.561 26-26 26z" fill="#1E90FF" fill-rule="nonzero"/>
    <path d="M47.5 23.5c0 7.732-6.268 14-14 14s-14-6.268-14-14 6.268-14 14-14 14 6.268 14 14zm-3 0c0-6.075-4.925-11-11-11s-11 4.925-11 11 4.925 11 11 11 11-4.925 11-11z" fill="#1EBC61" fill-rule="nonzero"/>
    <path d="M34 14.5c-1.104 0-2 .896-2 2v13c0 1.104.896 2 2 2s2-.896 2-2v-13c0-1.104-.896-2-2-2z" fill="#FFD700"/>
    <path d="M34 37c-1.104 0-2 .896-2 2v3c0 1.104.896 2 2 2s2-.896 2-2v-3c0-1.104-.896-2-2-2z" fill="#FFD700"/>
    <path d="M22.5 23.5c-.552 0-1 .448-1 1v6c0 .552.448 1 1 1h7c.552 0 1-.448 1-1v-6c0-.552-.448-1-1-1h-7zm21 0c-.552 0-1 .448-1 1v6c0 .552.448 1 1 1h7c.552 0 1-.448 1-1v-6c0-.552-.448-1-1-1h-7z" fill="#FFF" fill-rule="nonzero"/>
    <circle cx="34" cy="32" r="2.5" fill="#FFF"/>
  </g>
</svg>`;class C extends CKEDITOR.Plugin{static get pluginName(){return"RtExtensionAi"}init(){const e=this.editor;this.addDropdown(e),this.addAutoComplete(e)}addDropdown(e){e.ui.componentFactory.add("aiSuggestion",n=>{const t=new CKEDITOR.Collection;t.add(this.createDropdownItem("Adjust Tone/Voice","adjust_tone")),t.add(this.createDropdownItem("AI Suggestion","suggest_response")),t.add(this.createDropdownItem("Translate","translate_content"));const r=CKEDITOR.createDropdown(n,CKEDITOR.DropdownButtonView);return CKEDITOR.addListToDropdown(r,t),r.buttonView.set({label:"AI Suggestions",tooltip:!0,withText:!0,icon:M}),r.on("execute",async s=>{const{id:l}=s.source,{content:i,isSelected:a}=y(e);A(i,e,l,a)}),r})}addAutoComplete(e){let n=null,t=!1;e.model.document.on("change:data",()=>{clearTimeout(n),n=setTimeout(async()=>{if(t){t=!1;return}const r=v(e.data.get().trim());if(r)try{const s=await u(r,"autocomplete_text");s&&(w(e,s),t=!0)}catch(s){console.error("Error during auto-complete:",s)}},500)})}createDropdownItem(e,n){return{type:"button",model:{label:e,id:n,withText:!0}}}}d.RtExtensionAi=C,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
